name: Develop

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: build
        run: make dev-build
      - name: archive raw artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
          retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    env:
      REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
      REGISTRY_AUTH: ${{ secrets.REGISTRY_AUTH }}
      VERSION_SPECIAL: -dev

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: download raw artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,arm
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.9.1
          driver-opts: image=moby/buildkit:v0.11.0
      - name: build Docker image
        run: make docker_${{ matrix.arch }}

  container-registry:
    needs: docker
    runs-on: ubuntu-22.04

    env:
      VERSION_SPECIAL: -dev

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: flecspublic.azurecr.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_AUTH }}
      - name: Pull images
        run: |
          docker pull --platform=linux/amd64 flecspublic.azurecr.io/webapp:$(make version)-amd64
          docker pull --platform=linux/arm64 flecspublic.azurecr.io/webapp:$(make version)-arm64
          docker pull --platform=linux/armhf flecspublic.azurecr.io/webapp:$(make version)-armhf
      - name: Create Docker manifest
        run: |
          docker manifest create flecspublic.azurecr.io/webapp:$(make version) flecspublic.azurecr.io/webapp:$(make version)-amd64 flecspublic.azurecr.io/webapp:$(make version)-arm64 flecspublic.azurecr.io/webapp:$(make version)-armhf
          docker manifest create flecspublic.azurecr.io/webapp:develop flecspublic.azurecr.io/webapp:$(make version)-amd64 flecspublic.azurecr.io/webapp:$(make version)-arm64 flecspublic.azurecr.io/webapp:$(make version)-armhf
      - name: Push Docker manifest
        run: |
          docker manifest push flecspublic.azurecr.io/webapp:$(make version)
          docker manifest push flecspublic.azurecr.io/webapp:develop

  package:
    needs: build
    runs-on: ubuntu-22.04
    environment: deploy-dl

    permissions:
      id-token: write
      contents: read

    env:
      VERSION_SPECIAL: -dev

    strategy:
      matrix:
        arch: ["amd64", "armhf", "arm64"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: package
        run: |
          make package_${{ matrix.arch }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy packages and latest files
        uses: azure/cli@v2
        with:
          azcliversion: 2.72.0
          inlineScript: |
            tdnf install -y make
            for i in `find ./out/${{ matrix.arch }}/pkg -mindepth 1 -maxdepth 1 -name "latest_flecs-webapp_*"`; do \
              echo "Uploading ${i}"; \
              az storage blob upload --auth-mode login --account-name flecs --container-name flecs-dl --name dev/webapp/$(basename ${i}) --file ${i} --overwrite
            done
            for i in `find ./out/${{ matrix.arch }}/pkg -mindepth 1 -maxdepth 1 -name "*.deb"`; do \
              echo "Uploading ${i}"; \
              az storage blob upload --auth-mode login --account-name flecs --container-name flecs-dl --name dev/webapp/$(make version)/deb/$(basename ${i}) --file ${i} --overwrite
            done
            for i in `find ./out/${{ matrix.arch }}/pkg -mindepth 1 -maxdepth 1 -name "*.tgz"`; do \
              echo "Uploading ${i}"; \
              az storage blob upload --auth-mode login --account-name flecs --container-name flecs-dl --name dev/webapp/$(make version)/tgz/$(basename ${i}) --file ${i} --overwrite
            done
